{"version":3,"sources":["components/SearchResults.js"],"names":["SearchResults","useState","results","setResults","loadingResults","setLoadingResults","params","useLocation","searchValue","decodeURIComponent","search","split","cards","map","data","product","_id","useEffect","ourRequest","axios","CancelToken","source","get","then","res","catch","err","isCancel","alert","response","error","cancel","title","className","length"],"mappings":"sOA8DeA,UApDf,WAA0B,IAAD,EACOC,mBAAS,IADhB,mBAChBC,EADgB,KACPC,EADO,OAEqBF,oBAAS,GAF9B,mBAEhBG,EAFgB,KAEAC,EAFA,KAGjBC,EAASC,cACTC,EAAcC,mBAAmBH,EAAOI,OAAOC,MAAM,KAAK,IAE1DC,EAAQR,EACZ,cAAC,IAAD,IAEAF,EAAQW,KAAI,SAACC,GAAD,OAAU,cAAC,IAAD,CAA4BC,QAASD,GAAnBA,EAAKE,QAsB/C,OAnBAC,qBAAU,WACR,IAAMC,EAAaC,IAAMC,YAAYC,SAerC,OAdAhB,GAAkB,GAElBc,IACGG,IADH,6BAC6Bd,IAC1Be,MAAK,SAACC,GACLrB,EAAWqB,EAAIV,KAAKZ,SACpBG,GAAkB,MAEnBoB,OAAM,SAACC,GACDP,IAAMQ,SAASD,IAClBE,MAAMF,EAAIG,SAASf,KAAKgB,UAIvB,kBAAMZ,EAAWa,YACvB,CAACvB,IAGF,eAAC,IAAD,CAAMwB,MAAOxB,EAAb,UACE,cAAC,IAAD,IACA,cAAC,IAAD,IACA,+BACE,yBAASyB,UAAU,iBAAnB,SACE,sBAAKA,UAAU,YAAf,UACE,mCACE,oBAAIA,UAAU,sCAAd,UACI7B,GAAkB,0DAAqBI,EAArB,UAEpBJ,IAAmBF,EAAQgC,QAAU,qDAEzC,cAAC,IAAD,CAActB,MAAOA","file":"static/js/9.12f34abd.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport ProductCard from './ProductCard';\r\nimport PlaceholderCards from './PlaceholderCards';\r\nimport Page from './Page';\r\nimport MainHeader from './MainHeader';\r\nimport Search from './Search';\r\nimport ProductsGrid from './ProductsGrid';\r\n\r\nfunction SearchResults() {\r\n  const [results, setResults] = useState([]);\r\n  const [loadingResults, setLoadingResults] = useState(true);\r\n  const params = useLocation();\r\n  const searchValue = decodeURIComponent(params.search.split('=')[1]);\r\n\r\n  const cards = loadingResults ? (\r\n    <PlaceholderCards />\r\n  ) : (\r\n    results.map((data) => <ProductCard key={data._id} product={data} />)\r\n  );\r\n\r\n  useEffect(() => {\r\n    const ourRequest = axios.CancelToken.source();\r\n    setLoadingResults(true); //Do not remove\r\n\r\n    axios\r\n      .get(`/products/search?q=${searchValue}`)\r\n      .then((res) => {\r\n        setResults(res.data.results);\r\n        setLoadingResults(false);\r\n      })\r\n      .catch((err) => {\r\n        if (!axios.isCancel(err)) {\r\n          alert(err.response.data.error);\r\n        }\r\n      });\r\n\r\n    return () => ourRequest.cancel();\r\n  }, [searchValue]);\r\n\r\n  return (\r\n    <Page title={searchValue}>\r\n      <Search />\r\n      <MainHeader />\r\n      <main>\r\n        <section className='search-results'>\r\n          <div className='container'>\r\n            <header>\r\n              <h3 className='search-results__heading text-center'>\r\n                {!loadingResults && <>You searched for \"{searchValue}\"</>}\r\n              </h3>\r\n              {!loadingResults && !results.length && <p>No Results found!</p>}\r\n            </header>\r\n            <ProductsGrid cards={cards} />\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </Page>\r\n  );\r\n}\r\n\r\nexport default SearchResults;\r\n"],"sourceRoot":""}